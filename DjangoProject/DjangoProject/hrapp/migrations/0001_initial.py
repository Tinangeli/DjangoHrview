# Generated by Django 5.1.7 on 2025-03-08 11:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cache',
            fields=[
                ('key', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('expiration', models.IntegerField()),
            ],
            options={
                'db_table': 'cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheLocks',
            fields=[
                ('key', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('owner', models.CharField(max_length=255)),
                ('expiration', models.IntegerField()),
            ],
            options={
                'db_table': 'cache_locks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(max_length=255)),
                ('is_active', models.IntegerField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'courses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Evaluations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('observation_date', models.DateField()),
                ('evaluation_type', models.CharField(max_length=255)),
                ('additional_comments', models.TextField(blank=True, null=True)),
                ('student_activities', models.JSONField(blank=True, null=True)),
                ('instructor_activities', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evaluations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FailedJobs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=255, unique=True)),
                ('connection', models.TextField()),
                ('queue', models.TextField()),
                ('payload', models.TextField()),
                ('exception', models.TextField()),
                ('failed_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'failed_jobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JobBatches',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('total_jobs', models.IntegerField()),
                ('pending_jobs', models.IntegerField()),
                ('failed_jobs', models.IntegerField()),
                ('failed_job_ids', models.TextField()),
                ('options', models.TextField(blank=True, null=True)),
                ('cancelled_at', models.IntegerField(blank=True, null=True)),
                ('created_at', models.IntegerField()),
                ('finished_at', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'job_batches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('queue', models.CharField(max_length=255)),
                ('payload', models.TextField()),
                ('attempts', models.PositiveIntegerField()),
                ('reserved_at', models.PositiveIntegerField(blank=True, null=True)),
                ('available_at', models.PositiveIntegerField()),
                ('created_at', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'jobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Migrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('migration', models.CharField(max_length=255)),
                ('batch', models.IntegerField()),
            ],
            options={
                'db_table': 'migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('guard_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('guard_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255)),
                ('notifiable_type', models.CharField(max_length=255)),
                ('notifiable_id', models.PositiveBigIntegerField()),
                ('data', models.TextField()),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResetTokens',
            fields=[
                ('email', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'password_reset_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('is_active', models.IntegerField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rooms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schedules',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('time', models.TimeField()),
                ('semester', models.CharField(max_length=255)),
                ('year', models.TextField()),
                ('is_active', models.IntegerField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'schedules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'schedule_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('user_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('payload', models.TextField()),
                ('last_activity', models.IntegerField()),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentEvaluationQuestions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('type', models.CharField(max_length=15)),
                ('options', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'student_evaluation_questions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentEvaluationResponses',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('year', models.CharField(max_length=255)),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'student_evaluation_responses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentEvaluations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'student_evaluations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentEvaluationSchedules',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'student_evaluation_schedules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255)),
                ('is_active', models.IntegerField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subjects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('password', models.CharField(max_length=255)),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModelHasPermissions',
            fields=[
                ('permission', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='hrapp.permissions')),
                ('model_type', models.CharField(max_length=255)),
                ('model_id', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'model_has_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleHasPermissions',
            fields=[
                ('permission', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='hrapp.permissions')),
            ],
            options={
                'db_table': 'role_has_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModelHasRoles',
            fields=[
                ('role', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='hrapp.roles')),
                ('model_type', models.CharField(max_length=255)),
                ('model_id', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'model_has_roles',
                'managed': False,
            },
        ),
    ]
